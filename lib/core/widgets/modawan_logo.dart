import 'package:flutter/material.dart';

//Add this CustomPaint widget to the Widget Tree

//Copy this CustomPainter code to the Bottom of the File
class ModawanLogoPainter extends CustomPainter {
  final Color color;

  ModawanLogoPainter(this.color);
  
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(169.782, 21.5312);
    path_0.cubicTo(166.285, 23.1249, 165.013, 24.1562, 163.635, 26.3749);
    path_0.lineTo(161.905, 29.1874);
    path_0.lineTo(162.293, 26.8437);
    path_0.cubicTo(162.788, 23.8749, 162.434, 23.9062, 157.348, 27.2187);
    path_0.cubicTo(147.386, 33.7187, 142.829, 41.7499, 142.829, 52.8749);
    path_0.cubicTo(142.829, 58.9999, 142.017, 58.6249, 141.205, 52.1561);
    path_0.cubicTo(140.675, 48.0936, 141.664, 42.7499, 143.783, 38.4374);
    path_0.lineTo(145.09, 35.6874);
    path_0.lineTo(142.935, 36.8124);
    path_0.cubicTo(136.577, 40.0936, 128.841, 50.5624, 127.534, 57.6249);
    path_0.lineTo(126.934, 61.0624);
    path_0.lineTo(126.828, 58.2811);
    path_0.cubicTo(126.757, 54.9374, 125.768, 55.7499, 123.295, 61.1249);
    path_0.cubicTo(121.423, 65.2186, 121.494, 64.1561, 123.578, 56.6874);
    path_0.cubicTo(126.333, 46.9061, 126.156, 46.5311, 120.893, 51.3749);
    path_0.cubicTo(115.524, 56.3749, 112.663, 61.3436, 111.991, 66.9374);
    path_0.lineTo(111.497, 71.0624);
    path_0.lineTo(110.649, 68.5624);
    path_0.cubicTo(110.19, 67.1874, 109.801, 65.4999, 109.766, 64.8124);
    path_0.cubicTo(109.695, 61.0311, 103.231, 72.1249, 101.641, 78.8124);
    path_0.cubicTo(99.7692, 86.6249, 101.182, 100.094, 104.503, 105.75);
    path_0.lineTo(105.704, 107.812);
    path_0.lineTo(110.084, 100.375);
    path_0.cubicTo(117.679, 87.4374, 122.023, 82.0936, 142.264, 60.7499);
    path_0.cubicTo(151.449, 51.0624, 157.595, 43.4374, 161.375, 37.1561);
    path_0.cubicTo(162.646, 34.9999, 163.847, 33.3437, 164.024, 33.4999);
    path_0.cubicTo(164.448, 33.9062, 158.69, 44.7499, 154.84, 50.6561);
    path_0.cubicTo(150.813, 56.9061, 150.777, 56.9686, 154.133, 54.6561);
    path_0.cubicTo(159.008, 51.3124, 158.937, 51.7186, 153.886, 56.0936);
    path_0.cubicTo(144.313, 64.3749, 127.711, 86.0311, 118.597, 102.031);
    path_0.cubicTo(112.698, 112.437, 109.236, 124.094, 108.565, 135.75);
    path_0.lineTo(108.176, 142.937);
    path_0.lineTo(111.497, 140.219);
    path_0.cubicTo(116.336, 136.281, 123.966, 133.281, 130.219, 132.812);
    path_0.lineTo(135.27, 132.437);
    path_0.lineTo(133.68, 130.875);
    path_0.cubicTo(131.42, 128.719, 126.757, 127, 121.6, 126.469);
    path_0.lineTo(117.219, 126);
    path_0.lineTo(121.07, 124.25);
    path_0.cubicTo(123.189, 123.281, 127.357, 121.562, 130.325, 120.469);
    path_0.cubicTo(138.52, 117.406, 150.954, 108.75, 149.682, 106.969);
    path_0.cubicTo(149.47, 106.625, 149.753, 106.187, 150.354, 106);
    path_0.cubicTo(151.378, 105.656, 161.375, 94.5624, 161.375, 93.7811);
    path_0.cubicTo(161.375, 93.5936, 158.761, 93.9374, 155.546, 94.5311);
    path_0.cubicTo(148.163, 95.9061, 138.591, 96.6249, 140.392, 95.6874);
    path_0.cubicTo(141.063, 95.3436, 145.443, 93.6561, 150.106, 91.9686);
    path_0.cubicTo(160.598, 88.1561, 165.967, 85.1561, 168.863, 81.4686);
    path_0.cubicTo(169.782, 80.2811, 169.782, 80.2811, 167.203, 81.4374);
    path_0.cubicTo(162.929, 83.3749, 162.434, 82.7811, 166.143, 80.1874);
    path_0.cubicTo(170.276, 77.3124, 174.904, 71.4374, 176.564, 66.9686);
    path_0.cubicTo(178.154, 62.8124, 177.906, 62.7499, 173.067, 66.0624);
    path_0.cubicTo(167.45, 69.9061, 162.364, 72.4061, 156.359, 74.2186);
    path_0.cubicTo(148.623, 76.5311, 148.941, 76.0936, 157.842, 72.2186);
    path_0.cubicTo(170.877, 66.5624, 177.306, 59.8749, 180.202, 48.9686);
    path_0.cubicTo(181.757, 43.1561, 181.192, 32.9687, 179.072, 28.0937);
    path_0.cubicTo(177.306, 23.9999, 177.271, 23.9999, 175.434, 25.9062);
    path_0.lineTo(174.091, 27.3124);
    path_0.lineTo(174.798, 25.5624);
    path_0.cubicTo(175.681, 23.3437, 175.716, 19.4999, 174.869, 19.4999);
    path_0.cubicTo(174.515, 19.4999, 172.219, 20.4062, 169.782, 21.5312);
    path_0.close();
    path_0.moveTo(171.301, 38.4999);
    path_0.cubicTo(169.111, 41.6249, 164.978, 45.9374, 162.116, 48.0311);
    path_0.cubicTo(160.668, 49.0624, 161.763, 47.6561, 164.801, 44.5624);
    path_0.cubicTo(167.592, 41.6561, 170.453, 38.4999, 171.089, 37.5311);
    path_0.cubicTo(171.725, 36.5624, 172.396, 35.9062, 172.537, 36.0624);
    path_0.cubicTo(172.714, 36.1874, 172.149, 37.3124, 171.301, 38.4999);
    path_0.close();
    path_0.moveTo(171.972, 50.3124);
    path_0.cubicTo(171.972, 50.4061, 170.135, 52.0311, 167.91, 53.9061);
    path_0.lineTo(163.847, 57.3124);
    path_0.lineTo(167.698, 53.7186);
    path_0.cubicTo(171.301, 50.3749, 171.972, 49.8436, 171.972, 50.3124);
    path_0.close();
    path_0.moveTo(143.713, 90.0624);
    path_0.cubicTo(135.27, 92.7499, 133.045, 93.6874, 127.11, 97.0936);
    path_0.lineTo(122.871, 99.5624);
    path_0.lineTo(126.404, 96.6874);
    path_0.cubicTo(130.572, 93.2811, 136.754, 90.5311, 143.854, 88.8749);
    path_0.cubicTo(151.872, 87.0311, 151.837, 87.4686, 143.713, 90.0624);
    path_0.close();

    Paint paint_0_fill = Paint()..style = PaintingStyle.fill;
    paint_0_fill.color = color;
    canvas.drawPath(path_0, paint_0_fill);

    Path path_1 = Path();
    path_1.moveTo(24.8465, 57.0624);
    path_1.cubicTo(21.5967, 58.7186, 24.4933, 61.3749, 29.5093, 61.3749);
    path_1.cubicTo(35.6204, 61.3749, 40.7424, 65.2186, 42.2613, 70.9374);
    path_1.cubicTo(43.1091, 74.1561, 42.8972, 147.531, 42.0141, 153.094);
    path_1.cubicTo(40.1066, 165.219, 34.4547, 171.375, 25.2704, 171.375);
    path_1.cubicTo(21.738, 171.375, 19.6185, 173.219, 20.8549, 175.219);
    path_1.cubicTo(21.8439, 176.906, 75.4661, 177.031, 76.1726, 175.344);
    path_1.cubicTo(76.8438, 173.844, 75.3601, 172.687, 71.8277, 171.906);
    path_1.cubicTo(67.3769, 170.906, 63.6325, 167.562, 62.1842, 163.281);
    path_1.cubicTo(61.1951, 160.375, 61.0538, 155.531, 61.0538, 128.594);
    path_1.lineTo(61.0538, 97.3124);
    path_1.lineTo(66.3171, 108.125);
    path_1.cubicTo(69.249, 114.094, 75.6427, 126.812, 80.5528, 136.406);
    path_1.lineTo(89.5251, 153.844);
    path_1.lineTo(91.9272, 152);
    path_1.cubicTo(93.2342, 150.969, 94.7178, 150.125, 95.2477, 150.125);
    path_1.cubicTo(96.8726, 150.125, 97.2611, 135.812, 95.7069, 134.187);
    path_1.cubicTo(88.96, 127.187, 84.9683, 112.594, 86.5226, 100.812);
    path_1.lineTo(87.2997, 94.7811);
    path_1.lineTo(80.4468, 80.7499);
    path_1.cubicTo(76.7025, 72.9999, 72.8168, 64.9999, 71.863, 62.9374);
    path_1.cubicTo(68.5779, 55.9374, 70.2734, 56.3749, 46.6415, 56.4061);
    path_1.cubicTo(33.9955, 56.4061, 25.6236, 56.6561, 24.8465, 57.0624);
    path_1.close();

    Paint paint_1_fill = Paint()..style = PaintingStyle.fill;
    paint_1_fill.color = color;
    canvas.drawPath(path_1, paint_1_fill);

    Path path_2 = Path();
    path_2.moveTo(94.7178, 86.0624);
    path_2.cubicTo(89.5958, 94.1249, 87.759, 107.062, 90.3376, 117.219);
    path_2.cubicTo(91.362, 121.375, 96.7313, 132.531, 97.4025, 131.937);
    path_2.cubicTo(97.5438, 131.781, 98.4622, 128.875, 99.4513, 125.437);
    path_2.cubicTo(100.44, 122, 102.136, 116.906, 103.266, 114.094);
    path_2.cubicTo(105.28, 109.062, 105.315, 108.969, 104.043, 106.906);
    path_2.cubicTo(101.853, 103.281, 97.791, 91.5624, 97.2612, 87.1561);
    path_2.lineTo(96.7313, 82.9374);
    path_2.lineTo(94.7178, 86.0624);
    path_2.close();

    Paint paint_2_fill = Paint()..style = PaintingStyle.fill;
    paint_2_fill.color = color;
    canvas.drawPath(path_2, paint_2_fill);

    Path path_3 = Path();
    path_3.moveTo(116.583, 95.3125);
    path_3.cubicTo(107.046, 110.344, 99.2393, 133.594, 99.204, 146.844);
    path_3.lineTo(99.204, 149.5);
    path_3.lineTo(103.019, 149.5);
    path_3.lineTo(106.799, 149.5);
    path_3.lineTo(107.187, 138.094);
    path_3.cubicTo(107.646, 123.219, 110.225, 113, 117.785, 95.5938);
    path_3.cubicTo(120.081, 90.3438, 119.763, 90.25, 116.583, 95.3125);
    path_3.close();

    Paint paint_3_fill = Paint()..style = PaintingStyle.fill;
    paint_3_fill.color = color;
    canvas.drawPath(path_3, paint_3_fill);

    Path path_4 = Path();
    path_4.moveTo(160.068, 100.094);
    path_4.cubicTo(157.595, 103.156, 153.391, 107.937, 150.707, 110.687);
    path_4.lineTo(145.832, 115.687);
    path_4.lineTo(145.797, 135.25);
    path_4.cubicTo(145.761, 165.719, 144.56, 169.656, 134.458, 172);
    path_4.cubicTo(130.855, 172.844, 129.194, 174.281, 130.395, 175.531);
    path_4.cubicTo(131.455, 176.687, 185.36, 176.781, 186.667, 175.625);
    path_4.cubicTo(188.857, 173.687, 186.49, 171.375, 182.357, 171.375);
    path_4.cubicTo(175.575, 171.344, 169.605, 166.812, 166.921, 159.687);
    path_4.cubicTo(165.366, 155.562, 165.296, 154.531, 164.942, 124.937);
    path_4.lineTo(164.554, 94.4686);
    path_4.lineTo(160.068, 100.094);
    path_4.close();

    Paint paint_4_fill = Paint()..style = PaintingStyle.fill;
    paint_4_fill.color = color;
    canvas.drawPath(path_4, paint_4_fill);

    Path path_5 = Path();
    path_5.moveTo(116.478, 140.031);
    path_5.cubicTo(112.309, 142.312, 107.823, 147.812, 108.989, 149.281);
    path_5.cubicTo(110.755, 151.437, 113.263, 151.312, 114.075, 149);
    path_5.cubicTo(114.57, 147.719, 115.842, 144.937, 116.901, 142.781);
    path_5.cubicTo(117.996, 140.625, 118.844, 138.875, 118.774, 138.875);
    path_5.cubicTo(118.703, 138.875, 117.643, 139.406, 116.478, 140.031);
    path_5.close();

    Paint paint_5_fill = Paint()..style = PaintingStyle.fill;
    paint_5_fill.color = color;
    canvas.drawPath(path_5, paint_5_fill);

    Path path_6 = Path();
    path_6.moveTo(99.9105, 151.812);
    path_6.cubicTo(95.177, 152.531, 93.5521, 153.312, 93.5521, 154.937);
    path_6.cubicTo(93.5521, 156.219, 93.7641, 156.406, 94.7885, 155.969);
    path_6.cubicTo(95.4596, 155.687, 99.0627, 155.437, 102.736, 155.437);
    path_6.cubicTo(106.445, 155.437, 110.013, 155.687, 110.684, 155.969);
    path_6.cubicTo(111.709, 156.406, 111.921, 156.219, 111.921, 154.969);
    path_6.cubicTo(111.921, 152.719, 105.35, 150.969, 99.9105, 151.812);
    path_6.close();

    Paint paint_6_fill = Paint()..style = PaintingStyle.fill;
    paint_6_fill.color = color;
    canvas.drawPath(path_6, paint_6_fill);

    Path path_7 = Path();
    path_7.moveTo(98.4605, 157.774);
    path_7.cubicTo(96.9769, 158.118, 96.5883, 158.805, 95.8112, 162.055);
    path_7.cubicTo(95.352, 164.212, 94.4336, 166.805, 93.8331, 167.868);
    path_7.cubicTo(92.738, 169.743, 92.738, 169.837, 94.8575, 171.962);
    path_7.cubicTo(97.4361, 174.555, 99.2023, 177.587, 100.898, 182.212);
    path_7.cubicTo(102.205, 185.868, 103.371, 187.555, 103.371, 185.805);
    path_7.cubicTo(103.371, 183.587, 107.08, 176.055, 109.694, 173.024);
    path_7.lineTo(112.449, 169.805);
    path_7.lineTo(111.177, 166.774);
    path_7.cubicTo(110.435, 165.118, 109.658, 162.462, 109.376, 160.868);
    path_7.cubicTo(108.775, 157.337, 104.784, 156.212, 98.4605, 157.774);
    path_7.close();
    path_7.moveTo(103.936, 168.993);
    path_7.cubicTo(104.112, 169.993, 103.83, 170.337, 102.699, 170.337);
    path_7.cubicTo(101.781, 170.337, 101.251, 169.93, 101.251, 169.18);
    path_7.cubicTo(101.251, 166.805, 103.547, 166.649, 103.936, 168.993);
    path_7.close();

    Paint paint_7_fill = Paint()..style = PaintingStyle.fill;
    paint_7_fill.color = color;
    canvas.drawPath(path_7, paint_7_fill);

    Path path_8 = Path();
    path_8.moveTo(30.5918, 202.281);
    path_8.lineTo(32.418, 202.281);
    path_8.lineTo(37.0762, 213.873);
    path_8.lineTo(41.7246, 202.281);
    path_8.lineTo(43.5605, 202.281);
    path_8.lineTo(37.7793, 216.5);
    path_8.lineTo(36.3535, 216.5);
    path_8.lineTo(30.5918, 202.281);
    path_8.close();
    path_8.moveTo(29.9961, 202.281);
    path_8.lineTo(31.6074, 202.281);
    path_8.lineTo(31.8711, 210.953);
    path_8.lineTo(31.8711, 216.5);
    path_8.lineTo(29.9961, 216.5);
    path_8.lineTo(29.9961, 202.281);
    path_8.close();
    path_8.moveTo(42.5352, 202.281);
    path_8.lineTo(44.1465, 202.281);
    path_8.lineTo(44.1465, 216.5);
    path_8.lineTo(42.2715, 216.5);
    path_8.lineTo(42.2715, 210.953);
    path_8.lineTo(42.5352, 202.281);
    path_8.close();
    path_8.moveTo(46.7051, 211.334);
    path_8.lineTo(46.7051, 211.109);
    path_8.cubicTo(46.7051, 210.348, 46.8158, 209.641, 47.0371, 208.99);
    path_8.cubicTo(47.2585, 208.333, 47.5775, 207.763, 47.9941, 207.281);
    path_8.cubicTo(48.4108, 206.793, 48.9154, 206.415, 49.5078, 206.148);
    path_8.cubicTo(50.1003, 205.875, 50.7643, 205.738, 51.5, 205.738);
    path_8.cubicTo(52.2422, 205.738, 52.9095, 205.875, 53.502, 206.148);
    path_8.cubicTo(54.1009, 206.415, 54.6087, 206.793, 55.0254, 207.281);
    path_8.cubicTo(55.4486, 207.763, 55.7708, 208.333, 55.9922, 208.99);
    path_8.cubicTo(56.2135, 209.641, 56.3242, 210.348, 56.3242, 211.109);
    path_8.lineTo(56.3242, 211.334);
    path_8.cubicTo(56.3242, 212.096, 56.2135, 212.802, 55.9922, 213.453);
    path_8.cubicTo(55.7708, 214.104, 55.4486, 214.674, 55.0254, 215.162);
    path_8.cubicTo(54.6087, 215.644, 54.1042, 216.021, 53.5117, 216.295);
    path_8.cubicTo(52.9258, 216.562, 52.2617, 216.695, 51.5195, 216.695);
    path_8.cubicTo(50.7773, 216.695, 50.11, 216.562, 49.5176, 216.295);
    path_8.cubicTo(48.9251, 216.021, 48.4173, 215.644, 47.9941, 215.162);
    path_8.cubicTo(47.5775, 214.674, 47.2585, 214.104, 47.0371, 213.453);
    path_8.cubicTo(46.8158, 212.802, 46.7051, 212.096, 46.7051, 211.334);
    path_8.close();
    path_8.moveTo(48.5117, 211.109);
    path_8.lineTo(48.5117, 211.334);
    path_8.cubicTo(48.5117, 211.861, 48.5736, 212.359, 48.6973, 212.828);
    path_8.cubicTo(48.821, 213.29, 49.0065, 213.701, 49.2539, 214.059);
    path_8.cubicTo(49.5078, 214.417, 49.8236, 214.7, 50.2012, 214.908);
    path_8.cubicTo(50.5788, 215.11, 51.0182, 215.211, 51.5195, 215.211);
    path_8.cubicTo(52.0143, 215.211, 52.4473, 215.11, 52.8184, 214.908);
    path_8.cubicTo(53.196, 214.7, 53.5085, 214.417, 53.7559, 214.059);
    path_8.cubicTo(54.0033, 213.701, 54.1888, 213.29, 54.3125, 212.828);
    path_8.cubicTo(54.4427, 212.359, 54.5078, 211.861, 54.5078, 211.334);
    path_8.lineTo(54.5078, 211.109);
    path_8.cubicTo(54.5078, 210.589, 54.4427, 210.097, 54.3125, 209.635);
    path_8.cubicTo(54.1888, 209.166, 54, 208.753, 53.7461, 208.395);
    path_8.cubicTo(53.4987, 208.03, 53.1862, 207.743, 52.8086, 207.535);
    path_8.cubicTo(52.4375, 207.327, 52.0013, 207.223, 51.5, 207.223);
    path_8.cubicTo(51.0052, 207.223, 50.569, 207.327, 50.1914, 207.535);
    path_8.cubicTo(49.8203, 207.743, 49.5078, 208.03, 49.2539, 208.395);
    path_8.cubicTo(49.0065, 208.753, 48.821, 209.166, 48.6973, 209.635);
    path_8.cubicTo(48.5736, 210.097, 48.5117, 210.589, 48.5117, 211.109);
    path_8.close();
    path_8.moveTo(65.25, 214.449);
    path_8.lineTo(65.25, 201.5);
    path_8.lineTo(67.0664, 201.5);
    path_8.lineTo(67.0664, 216.5);
    path_8.lineTo(65.4062, 216.5);
    path_8.lineTo(65.25, 214.449);
    path_8.close();
    path_8.moveTo(58.1406, 211.334);
    path_8.lineTo(58.1406, 211.129);
    path_8.cubicTo(58.1406, 210.322, 58.2383, 209.589, 58.4336, 208.932);
    path_8.cubicTo(58.6354, 208.268, 58.9186, 207.698, 59.2832, 207.223);
    path_8.cubicTo(59.6543, 206.747, 60.0938, 206.383, 60.6016, 206.129);
    path_8.cubicTo(61.1159, 205.868, 61.6888, 205.738, 62.3203, 205.738);
    path_8.cubicTo(62.9844, 205.738, 63.5638, 205.855, 64.0586, 206.09);
    path_8.cubicTo(64.5599, 206.318, 64.9831, 206.653, 65.3281, 207.096);
    path_8.cubicTo(65.6797, 207.532, 65.9564, 208.059, 66.1582, 208.678);
    path_8.cubicTo(66.36, 209.296, 66.5, 209.996, 66.5781, 210.777);
    path_8.lineTo(66.5781, 211.676);
    path_8.cubicTo(66.5065, 212.451, 66.3665, 213.147, 66.1582, 213.766);
    path_8.cubicTo(65.9564, 214.384, 65.6797, 214.911, 65.3281, 215.348);
    path_8.cubicTo(64.9831, 215.784, 64.5599, 216.119, 64.0586, 216.354);
    path_8.cubicTo(63.5573, 216.581, 62.9714, 216.695, 62.3008, 216.695);
    path_8.cubicTo(61.6823, 216.695, 61.1159, 216.562, 60.6016, 216.295);
    path_8.cubicTo(60.0938, 216.028, 59.6543, 215.654, 59.2832, 215.172);
    path_8.cubicTo(58.9186, 214.69, 58.6354, 214.124, 58.4336, 213.473);
    path_8.cubicTo(58.2383, 212.815, 58.1406, 212.102, 58.1406, 211.334);
    path_8.close();
    path_8.moveTo(59.957, 211.129);
    path_8.lineTo(59.957, 211.334);
    path_8.cubicTo(59.957, 211.861, 60.0091, 212.356, 60.1133, 212.818);
    path_8.cubicTo(60.224, 213.281, 60.3932, 213.688, 60.6211, 214.039);
    path_8.cubicTo(60.849, 214.391, 61.1387, 214.667, 61.4902, 214.869);
    path_8.cubicTo(61.8418, 215.064, 62.2617, 215.162, 62.75, 215.162);
    path_8.cubicTo(63.349, 215.162, 63.8405, 215.035, 64.2246, 214.781);
    path_8.cubicTo(64.6152, 214.527, 64.9277, 214.192, 65.1621, 213.775);
    path_8.cubicTo(65.3965, 213.359, 65.5788, 212.906, 65.709, 212.418);
    path_8.lineTo(65.709, 210.064);
    path_8.cubicTo(65.6309, 209.706, 65.5169, 209.361, 65.3672, 209.029);
    path_8.cubicTo(65.224, 208.691, 65.0352, 208.391, 64.8008, 208.131);
    path_8.cubicTo(64.5729, 207.864, 64.2897, 207.652, 63.9512, 207.496);
    path_8.cubicTo(63.6191, 207.34, 63.2253, 207.262, 62.7695, 207.262);
    path_8.cubicTo(62.2747, 207.262, 61.8483, 207.366, 61.4902, 207.574);
    path_8.cubicTo(61.1387, 207.776, 60.849, 208.056, 60.6211, 208.414);
    path_8.cubicTo(60.3932, 208.766, 60.224, 209.176, 60.1133, 209.645);
    path_8.cubicTo(60.0091, 210.107, 59.957, 210.602, 59.957, 211.129);
    path_8.close();
    path_8.moveTo(76.1094, 214.693);
    path_8.lineTo(76.1094, 209.254);
    path_8.cubicTo(76.1094, 208.837, 76.0247, 208.476, 75.8555, 208.17);
    path_8.cubicTo(75.6927, 207.857, 75.4453, 207.617, 75.1133, 207.447);
    path_8.cubicTo(74.7812, 207.278, 74.3711, 207.193, 73.8828, 207.193);
    path_8.cubicTo(73.4271, 207.193, 73.0267, 207.271, 72.6816, 207.428);
    path_8.cubicTo(72.3431, 207.584, 72.0762, 207.789, 71.8809, 208.043);
    path_8.cubicTo(71.6921, 208.297, 71.5977, 208.57, 71.5977, 208.863);
    path_8.lineTo(69.791, 208.863);
    path_8.cubicTo(69.791, 208.486, 69.8887, 208.111, 70.084, 207.74);
    path_8.cubicTo(70.2793, 207.369, 70.5592, 207.034, 70.9238, 206.734);
    path_8.cubicTo(71.2949, 206.428, 71.7376, 206.188, 72.252, 206.012);
    path_8.cubicTo(72.7728, 205.829, 73.3522, 205.738, 73.9902, 205.738);
    path_8.cubicTo(74.7585, 205.738, 75.4355, 205.868, 76.0215, 206.129);
    path_8.cubicTo(76.6139, 206.389, 77.0762, 206.783, 77.4082, 207.311);
    path_8.cubicTo(77.7467, 207.831, 77.916, 208.486, 77.916, 209.273);
    path_8.lineTo(77.916, 214.195);
    path_8.cubicTo(77.916, 214.547, 77.9453, 214.921, 78.0039, 215.318);
    path_8.cubicTo(78.069, 215.715, 78.1634, 216.057, 78.2871, 216.344);
    path_8.lineTo(78.2871, 216.5);
    path_8.lineTo(76.4023, 216.5);
    path_8.cubicTo(76.3112, 216.292, 76.2396, 216.015, 76.1875, 215.67);
    path_8.cubicTo(76.1354, 215.318, 76.1094, 214.993, 76.1094, 214.693);
    path_8.close();
    path_8.moveTo(76.4219, 210.094);
    path_8.lineTo(76.4414, 211.363);
    path_8.lineTo(74.6152, 211.363);
    path_8.cubicTo(74.1009, 211.363, 73.6419, 211.406, 73.2383, 211.49);
    path_8.cubicTo(72.8346, 211.568, 72.4961, 211.689, 72.2227, 211.852);
    path_8.cubicTo(71.9492, 212.014, 71.7409, 212.219, 71.5977, 212.467);
    path_8.cubicTo(71.4544, 212.708, 71.3828, 212.991, 71.3828, 213.316);
    path_8.cubicTo(71.3828, 213.648, 71.4577, 213.951, 71.6074, 214.225);
    path_8.cubicTo(71.7572, 214.498, 71.9818, 214.716, 72.2812, 214.879);
    path_8.cubicTo(72.5872, 215.035, 72.9616, 215.113, 73.4043, 215.113);
    path_8.cubicTo(73.9577, 215.113, 74.446, 214.996, 74.8691, 214.762);
    path_8.cubicTo(75.2923, 214.527, 75.6276, 214.241, 75.875, 213.902);
    path_8.cubicTo(76.1289, 213.564, 76.2656, 213.235, 76.2852, 212.916);
    path_8.lineTo(77.0566, 213.785);
    path_8.cubicTo(77.0111, 214.059, 76.8874, 214.361, 76.6855, 214.693);
    path_8.cubicTo(76.4837, 215.025, 76.2135, 215.344, 75.875, 215.65);
    path_8.cubicTo(75.543, 215.95, 75.1458, 216.201, 74.6836, 216.402);
    path_8.cubicTo(74.2279, 216.598, 73.7135, 216.695, 73.1406, 216.695);
    path_8.cubicTo(72.4245, 216.695, 71.7962, 216.555, 71.2559, 216.275);
    path_8.cubicTo(70.722, 215.995, 70.3053, 215.621, 70.0059, 215.152);
    path_8.cubicTo(69.7129, 214.677, 69.5664, 214.146, 69.5664, 213.561);
    path_8.cubicTo(69.5664, 212.994, 69.6771, 212.496, 69.8984, 212.066);
    path_8.cubicTo(70.1198, 211.63, 70.4388, 211.269, 70.8555, 210.982);
    path_8.cubicTo(71.2721, 210.689, 71.7734, 210.468, 72.3594, 210.318);
    path_8.cubicTo(72.9453, 210.169, 73.5996, 210.094, 74.3223, 210.094);
    path_8.lineTo(76.4219, 210.094);
    path_8.close();
    path_8.moveTo(83.4336, 214.625);
    path_8.lineTo(86.1484, 205.934);
    path_8.lineTo(87.3398, 205.934);
    path_8.lineTo(87.1055, 207.662);
    path_8.lineTo(84.3418, 216.5);
    path_8.lineTo(83.1797, 216.5);
    path_8.lineTo(83.4336, 214.625);
    path_8.close();
    path_8.moveTo(81.6074, 205.934);
    path_8.lineTo(83.9219, 214.723);
    path_8.lineTo(84.0879, 216.5);
    path_8.lineTo(82.8672, 216.5);
    path_8.lineTo(79.8008, 205.934);
    path_8.lineTo(81.6074, 205.934);
    path_8.close();
    path_8.moveTo(89.9375, 214.654);
    path_8.lineTo(92.1445, 205.934);
    path_8.lineTo(93.9414, 205.934);
    path_8.lineTo(90.875, 216.5);
    path_8.lineTo(89.6641, 216.5);
    path_8.lineTo(89.9375, 214.654);
    path_8.close();
    path_8.moveTo(87.6035, 205.934);
    path_8.lineTo(90.2598, 214.479);
    path_8.lineTo(90.5625, 216.5);
    path_8.lineTo(89.4102, 216.5);
    path_8.lineTo(86.5684, 207.643);
    path_8.lineTo(86.334, 205.934);
    path_8.lineTo(87.6035, 205.934);
    path_8.close();
    path_8.moveTo(102.027, 214.693);
    path_8.lineTo(102.027, 209.254);
    path_8.cubicTo(102.027, 208.837, 101.943, 208.476, 101.773, 208.17);
    path_8.cubicTo(101.611, 207.857, 101.363, 207.617, 101.031, 207.447);
    path_8.cubicTo(100.699, 207.278, 100.289, 207.193, 99.8008, 207.193);
    path_8.cubicTo(99.3451, 207.193, 98.9447, 207.271, 98.5996, 207.428);
    path_8.cubicTo(98.2611, 207.584, 97.9941, 207.789, 97.7988, 208.043);
    path_8.cubicTo(97.61, 208.297, 97.5156, 208.57, 97.5156, 208.863);
    path_8.lineTo(95.709, 208.863);
    path_8.cubicTo(95.709, 208.486, 95.8066, 208.111, 96.002, 207.74);
    path_8.cubicTo(96.1973, 207.369, 96.4772, 207.034, 96.8418, 206.734);
    path_8.cubicTo(97.2129, 206.428, 97.6556, 206.188, 98.1699, 206.012);
    path_8.cubicTo(98.6908, 205.829, 99.2702, 205.738, 99.9082, 205.738);
    path_8.cubicTo(100.676, 205.738, 101.354, 205.868, 101.939, 206.129);
    path_8.cubicTo(102.532, 206.389, 102.994, 206.783, 103.326, 207.311);
    path_8.cubicTo(103.665, 207.831, 103.834, 208.486, 103.834, 209.273);
    path_8.lineTo(103.834, 214.195);
    path_8.cubicTo(103.834, 214.547, 103.863, 214.921, 103.922, 215.318);
    path_8.cubicTo(103.987, 215.715, 104.081, 216.057, 104.205, 216.344);
    path_8.lineTo(104.205, 216.5);
    path_8.lineTo(102.32, 216.5);
    path_8.cubicTo(102.229, 216.292, 102.158, 216.015, 102.105, 215.67);
    path_8.cubicTo(102.053, 215.318, 102.027, 214.993, 102.027, 214.693);
    path_8.close();
    path_8.moveTo(102.34, 210.094);
    path_8.lineTo(102.359, 211.363);
    path_8.lineTo(100.533, 211.363);
    path_8.cubicTo(100.019, 211.363, 99.5599, 211.406, 99.1562, 211.49);
    path_8.cubicTo(98.7526, 211.568, 98.4141, 211.689, 98.1406, 211.852);
    path_8.cubicTo(97.8672, 212.014, 97.6589, 212.219, 97.5156, 212.467);
    path_8.cubicTo(97.3724, 212.708, 97.3008, 212.991, 97.3008, 213.316);
    path_8.cubicTo(97.3008, 213.648, 97.3757, 213.951, 97.5254, 214.225);
    path_8.cubicTo(97.6751, 214.498, 97.8997, 214.716, 98.1992, 214.879);
    path_8.cubicTo(98.5052, 215.035, 98.8796, 215.113, 99.3223, 215.113);
    path_8.cubicTo(99.8757, 215.113, 100.364, 214.996, 100.787, 214.762);
    path_8.cubicTo(101.21, 214.527, 101.546, 214.241, 101.793, 213.902);
    path_8.cubicTo(102.047, 213.564, 102.184, 213.235, 102.203, 212.916);
    path_8.lineTo(102.975, 213.785);
    path_8.cubicTo(102.929, 214.059, 102.805, 214.361, 102.604, 214.693);
    path_8.cubicTo(102.402, 215.025, 102.132, 215.344, 101.793, 215.65);
    path_8.cubicTo(101.461, 215.95, 101.064, 216.201, 100.602, 216.402);
    path_8.cubicTo(100.146, 216.598, 99.6315, 216.695, 99.0586, 216.695);
    path_8.cubicTo(98.3424, 216.695, 97.7142, 216.555, 97.1738, 216.275);
    path_8.cubicTo(96.64, 215.995, 96.2233, 215.621, 95.9238, 215.152);
    path_8.cubicTo(95.6309, 214.677, 95.4844, 214.146, 95.4844, 213.561);
    path_8.cubicTo(95.4844, 212.994, 95.5951, 212.496, 95.8164, 212.066);
    path_8.cubicTo(96.0378, 211.63, 96.3568, 211.269, 96.7734, 210.982);
    path_8.cubicTo(97.1901, 210.689, 97.6914, 210.468, 98.2773, 210.318);
    path_8.cubicTo(98.8633, 210.169, 99.5176, 210.094, 100.24, 210.094);
    path_8.lineTo(102.34, 210.094);
    path_8.close();
    path_8.moveTo(108.482, 208.189);
    path_8.lineTo(108.482, 216.5);
    path_8.lineTo(106.676, 216.5);
    path_8.lineTo(106.676, 205.934);
    path_8.lineTo(108.385, 205.934);
    path_8.lineTo(108.482, 208.189);
    path_8.close();
    path_8.moveTo(108.053, 210.816);
    path_8.lineTo(107.301, 210.787);
    path_8.cubicTo(107.307, 210.064, 107.415, 209.397, 107.623, 208.785);
    path_8.cubicTo(107.831, 208.167, 108.124, 207.63, 108.502, 207.174);
    path_8.cubicTo(108.88, 206.718, 109.329, 206.367, 109.85, 206.119);
    path_8.cubicTo(110.377, 205.865, 110.96, 205.738, 111.598, 205.738);
    path_8.cubicTo(112.118, 205.738, 112.587, 205.81, 113.004, 205.953);
    path_8.cubicTo(113.421, 206.09, 113.775, 206.311, 114.068, 206.617);
    path_8.cubicTo(114.368, 206.923, 114.596, 207.32, 114.752, 207.809);
    path_8.cubicTo(114.908, 208.29, 114.986, 208.88, 114.986, 209.576);
    path_8.lineTo(114.986, 216.5);
    path_8.lineTo(113.17, 216.5);
    path_8.lineTo(113.17, 209.557);
    path_8.cubicTo(113.17, 209.003, 113.089, 208.561, 112.926, 208.229);
    path_8.cubicTo(112.763, 207.89, 112.525, 207.646, 112.213, 207.496);
    path_8.cubicTo(111.9, 207.34, 111.516, 207.262, 111.061, 207.262);
    path_8.cubicTo(110.611, 207.262, 110.201, 207.356, 109.83, 207.545);
    path_8.cubicTo(109.465, 207.734, 109.15, 207.994, 108.883, 208.326);
    path_8.cubicTo(108.622, 208.658, 108.417, 209.039, 108.268, 209.469);
    path_8.cubicTo(108.124, 209.892, 108.053, 210.341, 108.053, 210.816);
    path_8.close();
    path_8.moveTo(124.615, 202.281);
    path_8.lineTo(124.615, 219.137);
    path_8.lineTo(123.043, 219.137);
    path_8.lineTo(123.043, 202.281);
    path_8.lineTo(124.615, 202.281);
    path_8.close();
    path_8.moveTo(137.835, 221.46);
    path_8.cubicTo(136.755, 221.46, 135.775, 221.26, 134.895, 220.86);
    path_8.cubicTo(134.028, 220.473, 133.342, 219.92, 132.835, 219.2);
    path_8.cubicTo(132.342, 218.493, 132.095, 217.687, 132.095, 216.78);
    path_8.cubicTo(132.095, 216.5, 132.115, 216.133, 132.155, 215.68);
    path_8.cubicTo(132.208, 215.227, 132.268, 214.72, 132.335, 214.16);
    path_8.cubicTo(132.415, 213.6, 132.495, 213.033, 132.575, 212.46);
    path_8.cubicTo(132.668, 211.887, 132.755, 211.333, 132.835, 210.8);
    path_8.lineTo(134.695, 211.08);
    path_8.cubicTo(134.548, 212, 134.415, 212.847, 134.295, 213.62);
    path_8.cubicTo(134.188, 214.38, 134.102, 215.033, 134.035, 215.58);
    path_8.cubicTo(133.982, 216.113, 133.955, 216.513, 133.955, 216.78);
    path_8.cubicTo(133.955, 217.367, 134.115, 217.887, 134.435, 218.34);
    path_8.cubicTo(134.755, 218.793, 135.208, 219.147, 135.795, 219.4);
    path_8.cubicTo(136.382, 219.667, 137.062, 219.8, 137.835, 219.8);
    path_8.cubicTo(138.608, 219.8, 139.262, 219.673, 139.795, 219.42);
    path_8.cubicTo(140.342, 219.18, 140.755, 218.847, 141.035, 218.42);
    path_8.cubicTo(141.315, 217.993, 141.455, 217.487, 141.455, 216.9);
    path_8.lineTo(141.455, 206.48);
    path_8.lineTo(143.335, 206.48);
    path_8.lineTo(143.335, 216.9);
    path_8.cubicTo(143.335, 217.847, 143.088, 218.66, 142.595, 219.34);
    path_8.cubicTo(142.102, 220.02, 141.442, 220.54, 140.615, 220.9);
    path_8.cubicTo(139.788, 221.273, 138.862, 221.46, 137.835, 221.46);
    path_8.close();
    path_8.moveTo(136.795, 206.3);
    path_8.lineTo(136.795, 204.36);
    path_8.lineTo(138.675, 204.36);
    path_8.lineTo(138.675, 206.3);
    path_8.lineTo(136.795, 206.3);
    path_8.close();
    path_8.moveTo(149.511, 221.08);
    path_8.cubicTo(149.031, 221.08, 148.524, 221.04, 147.991, 220.96);
    path_8.cubicTo(147.471, 220.893, 146.898, 220.793, 146.271, 220.66);
    path_8.lineTo(146.551, 219.16);
    path_8.cubicTo(147.258, 219.24, 147.844, 219.3, 148.311, 219.34);
    path_8.cubicTo(148.778, 219.38, 149.178, 219.4, 149.511, 219.4);
    path_8.cubicTo(150.578, 219.4, 151.351, 219.2, 151.831, 218.8);
    path_8.cubicTo(152.324, 218.4, 152.571, 217.82, 152.571, 217.06);
    path_8.lineTo(152.571, 207.66);
    path_8.lineTo(153.331, 208.16);
    path_8.lineTo(150.191, 208.16);
    path_8.cubicTo(149.484, 208.16, 148.931, 208.247, 148.531, 208.42);
    path_8.cubicTo(148.131, 208.58, 147.851, 208.907, 147.691, 209.4);
    path_8.cubicTo(147.531, 209.88, 147.451, 210.587, 147.451, 211.52);
    path_8.cubicTo(147.451, 212.44, 147.531, 213.14, 147.691, 213.62);
    path_8.cubicTo(147.851, 214.087, 148.124, 214.407, 148.511, 214.58);
    path_8.cubicTo(148.911, 214.753, 149.471, 214.84, 150.191, 214.84);
    path_8.lineTo(152.571, 214.84);
    path_8.lineTo(152.571, 216.5);
    path_8.lineTo(150.191, 216.5);
    path_8.cubicTo(149.031, 216.5, 148.118, 216.327, 147.451, 215.98);
    path_8.cubicTo(146.784, 215.62, 146.304, 215.073, 146.011, 214.34);
    path_8.cubicTo(145.731, 213.593, 145.591, 212.653, 145.591, 211.52);
    path_8.cubicTo(145.591, 210.373, 145.731, 209.427, 146.011, 208.68);
    path_8.cubicTo(146.304, 207.933, 146.784, 207.38, 147.451, 207.02);
    path_8.cubicTo(148.118, 206.66, 149.031, 206.48, 150.191, 206.48);
    path_8.lineTo(154.431, 206.48);
    path_8.lineTo(154.431, 217.04);
    path_8.cubicTo(154.431, 217.893, 154.231, 218.62, 153.831, 219.22);
    path_8.cubicTo(153.431, 219.833, 152.864, 220.293, 152.131, 220.6);
    path_8.cubicTo(151.398, 220.92, 150.524, 221.08, 149.511, 221.08);
    path_8.close();
    path_8.moveTo(164.544, 216.5);
    path_8.lineTo(164.544, 214.84);
    path_8.lineTo(166.704, 214.84);
    path_8.lineTo(166.704, 216.5);
    path_8.lineTo(164.544, 216.5);
    path_8.close();
    path_8.moveTo(156.704, 216.5);
    path_8.lineTo(156.704, 214.84);
    path_8.lineTo(164.104, 214.84);
    path_8.lineTo(162.684, 216.1);
    path_8.lineTo(162.684, 212);
    path_8.cubicTo(162.684, 211.027, 162.571, 210.26, 162.344, 209.7);
    path_8.cubicTo(162.131, 209.14, 161.778, 208.747, 161.284, 208.52);
    path_8.cubicTo(160.791, 208.28, 160.124, 208.16, 159.284, 208.16);
    path_8.lineTo(157.664, 208.16);
    path_8.lineTo(157.664, 206.48);
    path_8.lineTo(159.284, 206.48);
    path_8.cubicTo(160.391, 206.48, 161.338, 206.66, 162.124, 207.02);
    path_8.cubicTo(162.911, 207.367, 163.511, 207.947, 163.924, 208.76);
    path_8.cubicTo(164.338, 209.56, 164.544, 210.64, 164.544, 212);
    path_8.lineTo(164.544, 216.5);
    path_8.lineTo(156.704, 216.5);
    path_8.close();
    path_8.moveTo(166.704, 216.5);
    path_8.lineTo(166.704, 214.84);
    path_8.cubicTo(166.864, 214.84, 166.971, 214.913, 167.024, 215.06);
    path_8.cubicTo(167.078, 215.207, 167.104, 215.407, 167.104, 215.66);
    path_8.cubicTo(167.104, 215.913, 167.078, 216.12, 167.024, 216.28);
    path_8.cubicTo(166.971, 216.427, 166.864, 216.5, 166.704, 216.5);
    path_8.close();
    path_8.moveTo(166.705, 216.5);
    path_8.lineTo(166.705, 214.84);
    path_8.lineTo(177.485, 214.84);
    path_8.lineTo(176.305, 215.72);
    path_8.lineTo(176.305, 211.58);
    path_8.cubicTo(176.305, 210.7, 176.205, 210.013, 176.005, 209.52);
    path_8.cubicTo(175.818, 209.027, 175.485, 208.673, 175.005, 208.46);
    path_8.cubicTo(174.525, 208.247, 173.872, 208.14, 173.045, 208.14);
    path_8.cubicTo(172.485, 208.14, 171.932, 208.18, 171.385, 208.26);
    path_8.cubicTo(170.838, 208.34, 170.412, 208.447, 170.105, 208.58);
    path_8.lineTo(171.245, 207.46);
    path_8.cubicTo(171.165, 207.767, 171.085, 208.16, 171.005, 208.64);
    path_8.cubicTo(170.925, 209.12, 170.858, 209.64, 170.805, 210.2);
    path_8.cubicTo(170.752, 210.747, 170.725, 211.293, 170.725, 211.84);
    path_8.cubicTo(170.725, 212.387, 170.752, 212.927, 170.805, 213.46);
    path_8.cubicTo(170.858, 213.993, 170.918, 214.46, 170.985, 214.86);
    path_8.cubicTo(171.052, 215.26, 171.105, 215.533, 171.145, 215.68);
    path_8.lineTo(169.365, 216.18);
    path_8.cubicTo(169.312, 216.007, 169.245, 215.707, 169.165, 215.28);
    path_8.cubicTo(169.098, 214.853, 169.032, 214.34, 168.965, 213.74);
    path_8.cubicTo(168.912, 213.14, 168.885, 212.507, 168.885, 211.84);
    path_8.cubicTo(168.885, 211.187, 168.912, 210.553, 168.965, 209.94);
    path_8.cubicTo(169.032, 209.313, 169.105, 208.747, 169.185, 208.24);
    path_8.cubicTo(169.278, 207.733, 169.365, 207.327, 169.445, 207.02);
    path_8.cubicTo(169.752, 206.9, 170.225, 206.78, 170.865, 206.66);
    path_8.cubicTo(171.518, 206.54, 172.245, 206.48, 173.045, 206.48);
    path_8.cubicTo(174.178, 206.48, 175.125, 206.647, 175.885, 206.98);
    path_8.cubicTo(176.658, 207.313, 177.232, 207.853, 177.605, 208.6);
    path_8.cubicTo(177.992, 209.333, 178.185, 210.327, 178.185, 211.58);
    path_8.lineTo(178.185, 216.5);
    path_8.lineTo(166.705, 216.5);
    path_8.close();
    path_8.moveTo(166.705, 216.5);
    path_8.cubicTo(166.532, 216.5, 166.425, 216.427, 166.385, 216.28);
    path_8.cubicTo(166.332, 216.12, 166.305, 215.913, 166.305, 215.66);
    path_8.cubicTo(166.305, 215.407, 166.332, 215.207, 166.385, 215.06);
    path_8.cubicTo(166.425, 214.913, 166.532, 214.84, 166.705, 214.84);
    path_8.lineTo(166.705, 216.5);
    path_8.close();

    Paint paint_8_fill = Paint()..style = PaintingStyle.fill;
    paint_8_fill.color = color;
    canvas.drawPath(path_8, paint_8_fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}

